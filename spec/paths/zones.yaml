post:
  tags:
    - Zones
  summary: Create a Zone
  description: The Create Zone API allows you to create a Primary, Secondary, or Alias Zone, and furthermore, allows you to create a Zone "from scratch" by copying another zone via an uploaded file or by Zone transfer.
  operationId: createZone
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/ZoneCreate.yaml'
        examples:
          New Primary Zone:
            summary: Create a Primary Zone from scratch
            value:
              properties:
                name: "primary-example.com."
                accountName: "example"
                type: "PRIMARY"
              primaryCreateInfo:
                forceImport: true
                createType: "NEW"
              changeComment: "Created as agreed"
          New Primary Zone Copied from Another Zone:
            summary: Create a Primary Zone by copying an existing zone
            value:
              properties:
                name: "copy-example.com."
                accountName: "example"
                type: "PRIMARY"
              primaryCreateInfo:
                forceImport: true
                createType: "COPY"
                originalZoneName: "example.cm."
      multipart/form-data:
        description: |
          Create a zone by uploading a BIND file along with zone creation parameters. Use this when creating a zone from a BIND file upload.
          
          **Important Notes:**
          - The `zone` field should contain the zone creation parameters as JSON
          - The `file` field should contain the BIND file content
          - Both fields are required for file uploads
        schema:
          type: object
          properties:
            zone:
              type: object
              description: |
                Zone creation parameters in JSON format. Must include createType: "UPLOAD" for file uploads.
              example:
                properties:
                  name: "example.com."
                  accountName: "example"
                  type: "PRIMARY"
                primaryCreateInfo:
                  forceImport: true
                  createType: "UPLOAD"
                changeComment: "Created from BIND file upload"
            file:
              type: string
              format: binary
              description: |
                The BIND file containing zone data. The file should contain DNS records in BIND format.
                
                **BIND File Format:**
                - Each line represents a DNS record
                - Records can span multiple lines using parentheses
                - Comments start with semicolon (;)
                - $ORIGIN directive sets the zone origin
                - Records without owner name inherit from the last stated owner
                - Records with owner name reset the owner context
              example: |
                ;File created: 12/04/2019 12:07
                ;Record count: 20
                $ORIGIN example.com.
                @    86400    IN    SOA udns1.ultradns.net. BindZone\.testzone.example.biz. (
                        2019041222    ;Serial
                        86400        ;Refresh
                        86400        ;Retry
                        86400        ;Expire
                        86400        ;Minimum
                    )
                @    86400    IN    NS    udns1.ultradns.net.
                @    86400    IN    NS    udns2.ultradns.net.
                www    300    IN    A    192.168.1.1
                mail   300    IN    A    192.168.1.2
                @      300    IN    MX   10 mail.example.com.
          required:
            - zone
            - file
        encoding:
          zone:
            contentType: application/json
          file:
            contentType: text/plain
  responses:
    '201':
      $ref: '../components/responses/CreatedGeneric.yaml'
    '202':
      $ref: '../components/responses/AcceptedGeneric.yaml'
    '400':
      $ref: '../components/responses/Error400.yaml'
    '401':
      $ref: '../components/responses/Error401.yaml'
    '403':
      $ref: '../components/responses/Error403.yaml'
    '5XX':
      $ref: '../components/responses/Error5xx.yaml'

get:
  tags:
    - Zones
  summary: List Zones
  description: Retrieves all zones in your account. The response returns an array of zone objects, each including details such as zone name, status, default TTL, and name servers.
  operationId: listZones
  parameters:
    - $ref: '../components/parameters/QueryParams.yaml'
      description: |
        The query used to construct the list. Format: `query_param:value+query_param_2:value`
        
        Example: `zone_status:ALL+network:ultra2`
        
        Query operators are:
        
        - **name** - Name of the zone (allowing for partial string matches).
        - **zone_type** - Returns zones of an identified type. If not specified, all zone types are returned. Valid values are:
          - ALIAS
          - PRIMARY
          - SECONDARY
        - **zone_status** - Returns zones with the identified status. Active zones are returned if not specified. Valid values are:
          - ACTIVE
          - SUSPENDED
          - ALL
        - **account_name** - Returns zones based upon the account. If not specified, zones of all of the accounts that the user has access to will be returned.
        - **network** - Only applicable for those accounts with the UltraDNS2 feature enabled. Returns zones that are either on the UltraDNS (standard) network or are part of the UltraDNS2 service network. Valid values are:
          - ultra1 (standard UltraDNS)
          - ultra2
    - $ref: '../components/parameters/Cursor.yaml'
    - $ref: '../components/parameters/Limit.yaml'
    - $ref: '../components/parameters/Sort.yaml'
    - $ref: '../components/parameters/Reverse.yaml'
  responses:
    '200':
      description: List Zones
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ZonesList.yaml'
          examples:
            List Zones:
              value:
                queryInfo:
                  q: "zone_status:ALL network:ultra2"
                  sort: "name"
                  reverse: false
                  limit: 50
                cursorInfo:
                  next: "c3ViLnVsdHJhZG5zMnRlc3QuY29tLjpORVhU"
                  last: "fjpMQVNU"
                zones:
                - properties:
                    name: "testzone1.com."
                    accountName: "testaccount1"
                    type: "PRIMARY"
                    dnssecStatus: "SIGNED"
                    status: "ACTIVE"
                    owner: "testuser1"
                    resourceRecordCount: 4826
                    lastModifiedDateTime: "2025-08-22T13:12:00Z"
                    ultra2: true
                - properties:
                    name: "testzone2.com."
                    accountName: "testaccount2"
                    type: "PRIMARY"
                    dnssecStatus: "UNSIGNED"
                    status: "ACTIVE"
                    owner: "testuser2"
                    resourceRecordCount: 9
                    lastModifiedDateTime: "2025-08-21T13:26:00Z"
                    ultra2: true
    '400':
      $ref: '../components/responses/Error400.yaml'
    '401':
      $ref: '../components/responses/Error401.yaml'
    '5XX':
      $ref: '../components/responses/Error5xx.yaml'
