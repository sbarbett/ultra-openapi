openapi: 3.0.3
info:
  title: UltraDNS API Documentation
  description: |
    # Introduction

    The UltraDNS REST API lets you manage DNS resources programmatically and test changes in a non-production environment.

    ## What you can do
    - Create and test API calls in a controlled test environment that mimics production.
    - Manage UltraDNS objects using REST requests.
    - Use the API as an alternative to the UltraDNS Managed Services Portal.

    ## Base URLs

    | Environment | Base URL | Purpose |
    |-------------|----------|---------|
    | Customer test | `https://test-api.ultradns.com` | Configuration and change testing |
    | Production | `https://api.ultradns.com` | Configuration and changes |

    All URI examples use the production URL. You may test calls against the customer test environment. The test environment has limitations; contact customer support for details.

    ## Request and response formats

    The API accepts and returns XML or JSON. JSON is preferred and is the default response format (even if the request is XML).

    | Header | Values | Purpose |
    |--------|--------|---------|
    | `Content-Type` | `application/json` or `application/xml` | Request body format |
    | `Accept` | `application/json` or `application/xml` | Desired response format |

    JSON Patch is supported for updates. Use `PATCH` with `Content-Type: application/json-patch+json`.

    ## API versioning

    To target a particular API version, include it it in the request path (i.e. `/v1/`, `/v2/` or `/v3`). When omitted, the most recent production version is used.

    Some calls differ by version:

    | API area | Behavior |
    |----------|----------|
    | Directional update | Updating a Directional Pool record-level TTL is not supported with `/v1/`. |
    | Deprecated ISO codes | Directional API calls using `/v1/` return different Geo-ISO details than `/v2` (default). |
    | Batch API | Batch API calls work **only** with `/v1/`. |
    | Batch Query API | Batch Query API calls work **only** with `/v1/`. |
    | Reporting APIs | Reporting APIs no longer require a separate "Authentication" token; use the standard REST API authorization token. |
    | Reporting APIs (link headers) | Response Link Headers for additional report results work **only** with `/v1/`. |

    ## Data Transfer Objects (DTOs)

    A Data Transfer Object (DTO) is the structured data sent or returned by an API call. Fields may be simple types, comma-separated lists (where allowed), or nested DTOs.

    Example (Primary Zone creation): the Zone Create DTO includes:
    - `properties` — Zone API properties.
    - `primaryCreateInfo` — Primary Zone settings.

    Nested DTOs can include structures such as Restrict IP or Notify Address.

    ## Responses

    All operations return an HTTP status code.

    | HTTP | Meaning | Typical use | Notes |
    |------|---------|-------------|-------|
    | 200 | OK | `GET`, `PUT`, `PATCH` | Returns the requested or updated DTO when applicable. |
    | 201 | Created | `POST` | Resource created. |
    | 202 | Accepted | Async operations | Includes `X-Task-ID` header; work is pending. |
    | 204 | No Content | `DELETE` | Deletion succeeded; no body. |

    Errors return `4xx` or `5xx` with an UltraDNS error payload:

    ```json
    [
      {
        "errorCode": 1801,
        "errorMessage": "Zone does not exist in the system."
      }
    ]
    ```

    System-level database errors may return code `9999` with a system error message.

    ## 429 Too Many Requests

    Returned when too many requests come from the same customer or IP address in a short period, to protect service reliability and security.

    Tips to avoid 429 responses:

    * Reuse your authorization token instead of creating a new token for every call (tokens are reusable for up to 1 hour).
    * Add a short delay (0.5–1.0 seconds) between consecutive requests when necessary.

    ## Supported record types

    | Record Type                                 | ID  |
    | ------------------------------------------- | --- |
    | A — IPv4 Address                            | 1   |
    | NS — Name Server                            | 2   |
    | CNAME — Canonical Name                      | 5   |
    | SOA — Start of Authority                    | 6   |
    | PTR — Pointer                               | 12  |
    | MX — Mail Exchange                          | 15  |
    | TXT — Text                                  | 16  |
    | RP — Responsible Person                     | 17  |
    | AAAA — IPv6 Address                         | 28  |
    | LOC — Location                              | 29  |
    | SRV — Service Locator                       | 33  |
    | NAPTR — Naming Authority Pointer            | 35  |
    | SSHFP — SSH Fingerprint                     | 44  |
    | SPF — Sender Policy Framework               | 99  |
    | CAA — Certification Authority Authorization | 257 |
  version: 0.1.2
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: UltraDNS
    url: https://dns.ultraproducts.support
    email: ultradnssupport@digicert.com
  termsOfService: https://www.digicert.com/security-terms
servers:
- url: https://api.ultradns.com
  description: Primary UltraDNS API
- url: https://test-api.ultradns.com
  description: Test UltraDNS API

# Import path files
paths:
  # Authorization endpoints
  /authorization/token:
    $ref: './paths/auth.yaml'
  
  # Platform endpoints
  /version:
    $ref: './paths/version.yaml'
  /status:
    $ref: './paths/status.yaml'
  
  # Zone endpoints
  /zones:
    $ref: './paths/zones.yaml'
  /zones/export:
    $ref: './paths/zones-export.yaml'
  /zones/{zoneName}:
    $ref: './paths/zones-zoneMeta.yaml'
  /zones/{zoneName}/transfer:
    $ref: './paths/zones-zoneMeta-transfer.yaml'
  /zones/{zoneName}/convert:
    $ref: './paths/zones-zoneMeta-convert.yaml'
  /zones/{zoneName}/unalias:
    $ref: './paths/zones-zoneMeta-unalias.yaml'
  /zones/{zoneName}/suspend:
    $ref: './paths/zones-zoneMeta-suspend.yaml'
  
  # Record endpoints
  /zones/{zoneName}/rrsets:
    $ref: './paths/records-list.yaml'
  /zones/{zoneName}/rrsets/{records_type}:
    $ref: './paths/records-listByType.yaml'
  
  # Task endpoints
  /tasks:
    $ref: './paths/tasks.yaml'
  /tasks/{taskId}:
    $ref: './paths/tasks-taskMeta.yaml'
  /tasks/{taskId}/result:
    $ref: './paths/tasks-taskMeta-result.yaml'

# Security schemes
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://api.ultradns.com/authorization/token
          scopes: {}
  schemas:
    QueryInfo:
      $ref: './components/schemas/QueryInfo.yaml'
    CursorInfo:
      $ref: './components/schemas/CursorInfo.yaml'
    ResultInfo:
      $ref: './components/schemas/ResultInfo.yaml'
    Zone:
      $ref: './components/schemas/Zone.yaml'
    ZoneCreate:
      $ref: './components/schemas/ZoneCreate.yaml'
    PrimaryZone:
      $ref: './components/schemas/PrimaryZone.yaml'
    SecondaryZone:
      $ref: './components/schemas/SecondaryZone.yaml'
    AliasZone:
      $ref: './components/schemas/AliasZone.yaml'
    ZonesList:
      $ref: './components/schemas/ZonesList.yaml'
    RRSet:
      $ref: './components/schemas/RRSet.yaml'
    RRSetsList:
      $ref: './components/schemas/RRSetsList.yaml'
    TokenResponse:
      $ref: './components/schemas/TokenResponse.yaml'
    ErrorGeneric:
      $ref: './components/schemas/ErrorGeneric.yaml'
    Task:
      $ref: './components/schemas/Task.yaml'
    TaskList:
      $ref: './components/schemas/TaskList.yaml'
    ReportTask:
      $ref: './components/schemas/ReportTask.yaml'
    ReportTaskList:
      $ref: './components/schemas/ReportTaskList.yaml'
    ZoneDelete:
      $ref: './components/schemas/ZoneDelete.yaml'

# Tags
tags:
  - name: Authorization
    description: >
      Obtain and refresh auth tokens via the OAuth 2.0 Resource Owner Password Credentials (ROPC) grant.
      Requires an UltraDNS API username and password.

  - name: Tasks
    description: >
      Track asynchronous operations (e.g., exports, snapshots). 202 responses include an `X-Task-ID` header;
      use it to check status and retrieve results.

  - name: Platform
    description: >
      Health, version, and connectivity checks for monitoring and compatibility.

  - name: Zones
    description: >
      Manage DNS zones: create, read, update, delete; export zone files; capture snapshots.

  - name: Records
    description: >
      Manage resource record sets (RRSets) within a zone (list, read, upsert via `rdata` and TTL, delete).
      `rdata` uses the BIND presentation format.

# Global security
security:
- oauth2: []
