type: object
description: |
  The RRSet DTO is the basic unit for resource record manipulation in the REST API. An RRSet contains the data for all resource records present at the same owner name (label), and with the same type and class (all records in UltraDNS have IN class).
  
  The UltraDNS REST API enforces the same TTL for all records in an RRSet (with the exception of a directional pool).
  
  Rather than trying to specify a custom structure for each different resource record type, the data for all resource records is represented by an "rdata" field. This field's contents map to the data supplied in the BIND presentation format for a resource record.
  
  If an RRSet is associated with an UltraDNS pool, the "profile" field is present and contains pool specific attributes.
  
  The RRSet DTO is used in the List (GET), Create (POST), and Update (PATCH) RRSets API calls. When a user is submitting an RRSet DTO to the server, the owner name and rrtype are not required, because they are specified by the URI. If present, they will be ignored.
properties:
  ownerName:
    type: string
    description: |
      The domain name of the owner of the RRSet. Can be either:
      - Fully Qualified Domain Name (FQDN)
      - Relative Domain Name
      
      If a FQDN, it must be contained within the zone name FQDN.
      
      NO for PUT, POST, or PATCH calls. Ignored if present.
      Not present (and ignored if present) if this RRSet is embedded inside of an Owner structure.
    example: "a.domain.name."
  rrtype:
    type: string
    description: |
      Resource Record Type for the RRSet.
      
      Must be formatted as the well-known resource record type (A, AAAA, TXT, etc.) and the corresponding number for the type, between 1 and 65535 or a known resource record name (A, AAAA, SRV, etc.).
      
      NO for PUT, POST, or PATCH calls. Ignored if present.
      Not present (and ignored if present) if this RRSet is embedded inside of an Owner structure.
    example: "A (1)"
  ttl:
    type: integer
    minimum: 0
    maximum: 2147483647
    description: |
      The time to live (in seconds) for all records in the RRSet.
      
      Must be a value between 0 and 2147483647, inclusive.
      
      Should be included in PUT, POST or PATCH calls.
      If TTL is not specified, the value set at the account level (either for record type or global setting) will be used.
    example: 300
  rdata:
    type: array
    items:
      type: string
    description: |
      The data for the records in the RRSet.
      
      Must use the BIND presentation format for the specified rrtype.
      
      For MX, NS, CNAME, PTR, and APEXALIAS record types, the rdata value cannot be relative to the zone name. It must be a FQDN.
      
      If rrtype is MX, entering "0 ." will create a NULL MX record, implying that "No Service" is available for the server / record.
      
      REQUIRED for PUT, POST, or PATCH calls. Must include BIND formatted data.
      
      Multiple non-Null MX records with the same domain/host label are supported.
      Only 1 Null-MX record is supported per domain/host.
      A domain/host cannot contain both Null and Non-Null MX records.
    example:
      - "1.2.3.4"
  systemGenerated:
    type: array
    items:
      type: boolean
    description: |
      Indicates whether the record in an rdata list is system generated or not.
      
      It represents the Boolean value that corresponds to the record in the list (in same order the records are returned).
      
      Will be returned for GET requests when used as the query parameter systemGeneratedStatus.
      If the query parameter is set to true, then the attribute name will be returned in the response.
      Ignored for PUT/PATCH/POST requests.
    example:
      - false
  ultra2SystemGenerated:
    type: array
    items:
      type: boolean
    description: |
      Indicates whether the nameserver in an rdata list is generated by the Ultra2 system or not.
      
      ultra2SystemGenerated will only be returned for those accounts which have Ultra2 enabled, as well as the associated NS records.
    example:
      - true
      - true
      - false
      - false
  profile:
    type: object
    description: |
      If an RRSet is associated with an UltraDNS pool, the "profile" field is present and contains pool specific attributes.
      
      Different types of profiles have different object layouts and attributes.
    example:
      description: "rd pool"
      order: "ROUND_ROBIN"
      "@context": "http://schemas.ultradns.com/RDPool.jsonschema"

examples:
  a_record:
    summary: A Record Example
    description: Example of an A record RRSet
    value:
      ownerName: "a.domain.name."
      rrtype: "A (1)"
      ttl: 300
      rdata:
        - "1.2.3.4"
  
  null_mx_record:
    summary: NULL MX Record Example
    description: Example of a NULL MX record RRSet
    value:
      ownerName: "a.domain.name."
      rrtype: "MX (15)"
      ttl: 300
      rdata:
        - "0 ."
  
  a_record_with_system_generated:
    summary: A Record with System Generated Status
    description: Example of an A record RRSet with systemGenerated field
    value:
      ownerName: "a.domain.name."
      rrtype: "A (1)"
      ttl: 300
      rdata:
        - "1.2.3.4"
      systemGenerated:
        - false
  
  ns_record_ultra2:
    summary: NS Record with Ultra2 System Generated
    description: Example of an NS record RRSet with Ultra2 system generated nameservers
    value:
      ownerName: "abc.com."
      rrtype: "NS (2)"
      ttl: 86400
      rdata:
        - "ns1.hostingsvcs.com."
        - "ns2.hostingsvcs.com."
        - "udns1.ultradns.net."
        - "udns2.ultradns.net."
      systemGenerated:
        - true
        - true
        - true
        - true
      ultra2SystemGenerated:
        - true
        - true
        - false
        - false
